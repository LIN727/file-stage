apiVersion: v1
kind: Namespace
metadata:
  name: file-stage
  namespace: file-stage

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o application.yaml --namespace=file-stage
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: backend
  name: backend
  namespace: file-stage
spec:
  ports:
    - name: "1028"
      port: 1028
      targetPort: 1028
  selector:
    io.kompose.service: backend

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o application.yaml --namespace=file-stage
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: database
  name: database
  namespace: file-stage
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: database

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o application.yaml --namespace=file-stage
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: frontend
  name: frontend
  namespace: file-stage
spec:
  ports:
    - name: "5173"
      port: 5173
      targetPort: 5173
  selector:
    io.kompose.service: frontend

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -o application.yaml --namespace=file-stage
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: nginx
  name: nginx
  namespace: file-stage
spec:
  ports:
    - name: "3001"
      port: 3001
      targetPort: 80
  selector:
    io.kompose.service: nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o application.yaml --namespace=file-stage
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: backend
  name: backend
  namespace: file-stage
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: backend
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o application.yaml --namespace=file-stage
        kompose.version: 1.33.0 (HEAD)
      labels:
        io.kompose.network/file-stage-default: "true"
        io.kompose.service: backend
    spec:
      containers:
        - env:
            - name: DB_URL
              value: mongodb://database/file-stage
            - name: NODE_ENV
              value: production
          image: kevinwutech/devops:api-1.0
          name: backend
          ports:
            - containerPort: 1028
              hostPort: 1028
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o application.yaml --namespace=file-stage
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: database
  name: database
  namespace: file-stage
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: database
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o application.yaml --namespace=file-stage
        kompose.version: 1.33.0 (HEAD)
      labels:
        io.kompose.network/file-stage-default: "true"
        io.kompose.service: database
    spec:
      containers:
        - image: mongo:4.0-xenial
          name: database
          ports:
            - containerPort: 27017
              hostPort: 27017
              protocol: TCP
          volumeMounts:
            - mountPath: /data/db
              name: file-stage
      restartPolicy: Always
      volumes:
        - name: file-stage
          persistentVolumeClaim:
            claimName: file-stage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: file-stage
  name: file-stage
  namespace: file-stage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o application.yaml --namespace=file-stage
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: frontend
  name: frontend
  namespace: file-stage
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: frontend
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o application.yaml --namespace=file-stage
        kompose.version: 1.33.0 (HEAD)
      labels:
        io.kompose.network/file-stage-default: "true"
        io.kompose.service: frontend
    spec:
      containers:
        - env:
            - name: NODE_ENV
              value: production
          image: kevinwutech/devops:web-1.0
          name: frontend
          ports:
            - containerPort: 5173
              hostPort: 5173
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o application.yaml --namespace=file-stage
    kompose.version: 1.33.0 (HEAD)
  labels:
    io.kompose.service: nginx
  name: nginx
  namespace: file-stage
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nginx
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o application.yaml --namespace=file-stage
        kompose.version: 1.33.0 (HEAD)
      labels:
        io.kompose.network/file-stage-default: "true"
        io.kompose.service: nginx
    spec:
      hostAliases:
      - ip: "172.17.0.1"
        hostnames:
        - "host.docker.internal"
      containers:
        - image: kevinwutech/devops:nginx-1.0
          name: nginx
          ports:
            - containerPort: 80
              hostPort: 3001
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/nginx/default.conf
              name: nginx-cm0
              readOnly: true
              subPath: default.conf
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: default.conf
                path: default.conf
            name: nginx-cm0
          name: nginx-cm0

---
apiVersion: v1
data:
  default.conf: |-
    server {
      listen 80;
      server_name localhost;

      location / {
        proxy_pass http://host.docker.internal:5173;
      }

      location /api {
        proxy_pass http://host.docker.internal:1028;
      }

      location ~ /api/asset$ {
        client_max_body_size 100G;
        proxy_pass http://host.docker.internal:1028;
        limit_except POST {
          deny all;
        }
      }

      location /socket.io {
        proxy_pass http://host.docker.internal:1028;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }
    }
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: nginx
  name: nginx-cm0
  namespace: file-stage

